sap.ui.define([
    "sap/ui/core/mvc/Controller",
    "sap/f/library"
],
    /**
     * @param {typeof sap.ui.core.mvc.Controller} Controller
     */
    function (Controller, library) {
        "use strict";
        let CController;

        CController = Controller.extend("zalcsa.aprobacionnotas.controller.Main", {
            /**
             * Called when a controller is instantiated and its View controls (if available) are already created.
             * Can be used to modify the View before it is displayed, to bind event handlers and do other one-time initialization.
             * @memberOf zalcsa.aprobacionnotas.view.Main
             */
            onInit: function () {
                //This code was generated by the layout editor.
                this.oRouter = this.getOwnerComponent().getRouter();
                this.oRouter.attachRouteMatched(this._onRouteMatched, this);
                this.oRouter.attachBeforeRouteMatched(this._onBeforeRouteMatched, this);
            },

            /**
             * Similar to onAfterRendering, but this hook is invoked before the controller's View is re-rendered
             * (NOT before the first rendering! onInit() is used for that one!).
             * @memberOf zalcsa.aprobacionnotas.view.Main
             */
            //  onBeforeRendering: function() {
            //
            //  },
            /**
             * Called when the View has been rendered (so its HTML is part of the document). Post-rendering manipulations of the HTML could be done here.
             * This hook is the same one that SAPUI5 controls get after being rendered.
             * @memberOf zalcsa.aprobacionnotas.view.Main
             */
            onAfterRendering: function () {
                //This code was generated by the layout editor.
                let oFlexibleColumnLayout = this.getView().byId("idFexibleColumnLayout");
                // Solo para casos que el layout tenga un binding, se debe eliminar para que te deje actualizar.
                if (oFlexibleColumnLayout.mBindingInfos) {
                    let mBindingInfos = oFlexibleColumnLayout.mBindingInfos;
                    if (mBindingInfos.layout) {
                        let mLayout = mBindingInfos.layout;
                        if (mLayout.binding) {
                            this.getView().byId("idFexibleColumnLayout").mBindingInfos.layout.binding = undefined;
                            delete this.getView().byId("idFexibleColumnLayout").mBindingInfos.layout.binding;
                        }
                    }
                }
                oFlexibleColumnLayout.setLayout(library.LayoutType.TwoColumnsMidExpanded);
            },
            /**
             * Called when the Controller is destroyed. Use this one to free resources and finalize activities.
             * @memberOf zalcsa.aprobacionnotas.view.Main
             */
            //  onExit: function() {
            //
            //  }

            /**
             *@memberOf zalcsa.aprobacionnotas.view.Main
             * @param {object} oEvent onBeforeRouteMatched
             */
            _onBeforeRouteMatched: function (oEvent) {
                //This code was generated by the layout editor.
                let sLayout = oEvent.getParameters().arguments.Layout;
                let oFlexibleColumnLayout = this.getView().byId("idFexibleColumnLayout");
                if (sLayout) {
                    oFlexibleColumnLayout.setLayout(sLayout);
                }
            },

            /**
             *@memberOf zalcsa.aprobacionnotas.view.Main
             * @param {object} oEvent onRouteMatched
             */
            _onRouteMatched: function (oEvent) {
                //This code was generated by the layout editor.
                let sRouteName = oEvent.getParameter("name");
                let oArguments = oEvent.getParameter("arguments");
                this.currentRouteName = sRouteName;
                this.currentRequest = oArguments.Solicitud;
                this.currentCompany = oArguments.Sociedad;
            },

            /**
             *@memberOf zalcsa.aprobacionnotas.view.Main
             * @param {object} oEvent onStateChanged
             */
            onStateChanged: function (oEvent) {
                //This code was generated by the layout editor.
                let bIsNavigationArrow = oEvent.getParameter("isNavigationArrow");
                let sLayout = oEvent.getParameter("layout");
                if (bIsNavigationArrow) {
                    switch (this.currentRouteName) {
                        case "detail":
                            if (!this.currentRequest || !this.currentCompany) {
                                let oSelCobranza = this.getOwnerComponent().getSelCobranza();
                                this.currentRequest = oSelCobranza.Solicitud;
                                this.currentCompany = oSelCobranza.Sociedad;
                            }
                            if (!this.currentRequest || !this.currentCompany) {
                                return;
                            }
                            this.oRouter.navTo(this.currentRouteName, {
                                Layout: sLayout,
                                Solicitud: this.currentRequest,
                                Sociedad: this.currentCompany
                            }, true);
                            break;

                        default:
                            if (!this.currentRouteName) {
                                return;
                            }
                            this.oRouter.navTo(this.currentRouteName, {
                                Layout: sLayout
                            }, true);
                            break;
                    }
                }
            },

            /**
             *@memberOf zalcsa.aprobacionnotas.view.Main
             * @param {object} oEvent onExit
             */
            onExit: function (oEvent) {
                //This code was generated by the layout editor.
                this.oRouter.detachRouteMatched(this.onRouteMatched, this);
                this.oRouter.detachBeforeRouteMatched(this.onBeforeRouteMatched, this);
            }

        });
        return CController;
    }
);